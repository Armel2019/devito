name: Jupyter Notebooks

on: push

jobs:
  tutorials:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      DEVITO_ARCH: "${{ matrix.compiler }}"
      DEVITO_LANGUAGE: ${{ matrix.language }}
      DEVITO_BACKEND: "core"
      PYTHON_VERSION: "3.7"
      RUN_CMD: ""
      # DEVITO_LOGGING: "DEBUG"

    strategy:
      # Prevent all build to stop if a single one fails
      fail-fast: false
      matrix:
        name: [
          tutos-osx-gcc-py37,
          tutos-osx-clang-py37
          ]

        include:
          - name: tutos-osx-gcc-py37
            os: macos-latest
            compiler: gcc-9
            language: "openmp"

          - name: tutos-osx-clang-py37
            os: macos-latest
            compiler: clang
            language: "C"

    steps:
    - name: Checkout devito
      uses: actions/checkout@v1

    - name: Set up Python 3.7
      if: matrix.name != 'tutos-docker-gcc-py36'
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install compilers for OSX
      if: runner.os == 'macOS'
      run: |
        if [ "${{ matrix.compiler }}" = "gcc-9" ]; then
          brew install gcc
        else
          sudo xcode-select -s /Applications/Xcode_11.app/Contents/Developer
        fi
        # dask error on osx, skip dask tuto
        echo "::set-env name=SKIP::--deselect=examples/seismic/tutorials/04_dask.ipynb"

    - name: Build docker image
      if: matrix.name == 'tutos-docker-gcc-py36'
      run: |
          docker build . --file docker/Dockerfile --tag devito_img
          echo "::set-env name=RUN_CMD::docker run --rm --name testrun devito_img"

    - name: Install dependencies
      if: matrix.name != 'tutos-docker-gcc-py36'
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install matplotlib

    - name: Seismic notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:seis_coverage.xml $SKIP examples/seismic/tutorials/
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:acc_coverage.xml $SKIP examples/seismic/acoustic/accuracy.ipynb

    - name: Self-adjoint notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:sa_coverage.xml $SKIP examples/seismic/self_adjoint/

    - name: CFD notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:cfd_coverage.xml examples/cfd

    - name: User api notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:api_coverage.xml examples/userapi

    - name: Compiler notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:comp_coverage.xml examples/compiler
        
    - name: Finance notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:comp_coverage.xml examples/finance

    - name: Performance notebooks
      run: |
        $RUN_CMD py.test --nbval --cov . --cov-config=.coveragerc --cov-report=xml:comp_coverage.xml examples/performance

    - name: Upload coverage to Codecov
      if: matrix.name != 'tutos-docker-gcc-py36'
      uses: codecov/codecov-action@v1.0.6
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: ${{ matrix.name }}
        file: ./*_coverage.xml
